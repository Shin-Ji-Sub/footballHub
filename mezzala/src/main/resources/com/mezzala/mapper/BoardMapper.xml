<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mezzala.mapper.BoardMapper">
    <resultMap id="BoardLargeCategoryResultMap" type="com.mezzala.dto.BoardLargeCategoryDto">
        <id property="largeCategoryId" column="large_category_id" />
        <result property="largeCategoryName" column="large_category_name" />
        <collection property="smallCategories" ofType="com.mezzala.dto.BoardSmallCategoryDto">
            <id property="smallCategoryIndex" column="small_category_index" />
            <result property="largeCategoryId" column="large_category_id" />
            <result property="smallCategoryName" column="small_category_name"/>
        </collection>
    </resultMap>
    <!-- <id> → <result> → <association> → <collection> 순서를 지켜야함!-->
    <resultMap id="BoardResultMap" type="com.mezzala.dto.BoardDto">
        <id property="boardId" column="board_id" />
        <result property="subject" column="subject" />
        <result property="content" column="content" />
        <result property="regDate" column="reg_date" />
        <result property="visitCount" column="visit_count" />
        <result property="recommendationCount" column="recommendationCount" />
        <result property="commentCount" column="commentCount" />
        <result property="boardState" column="board_state" />
        <!-- 1:1 관계 user -->
        <association property="user" javaType="com.mezzala.dto.UserDto">
            <id property="userId" column="user_id" />
            <result property="nickname" column="nickname" />
            <result property="socialMethod" column="social_method" />
            <result property="joinDate" column="join_date" />
            <result property="roleId" column="role_id" />
            <result property="state" column="state" />
        </association>
        <!-- 1:1 관계 board_large_category -->
        <association property="largeCategory" javaType="com.mezzala.dto.BoardLargeCategoryDto">
            <id property="largeCategoryId" column="large_category_id" />
            <result property="largeCategoryName" column="large_category_name" />
        </association>
        <!-- 1:1 관계 board_small_category -->
        <association property="smallCategory" javaType="com.mezzala.dto.BoardSmallCategoryDto">
            <id property="smallCategoryIndex" column="small_category_index" />
            <result property="smallCategoryName" column="small_category_name" />
        </association>
        <!-- 1:N 관계 board_attach -->
        <collection property="boardAttaches" ofType="com.mezzala.dto.BoardAttachDto">
            <id property="attachId" column="attach_id" />
            <result property="userFileName" column="user_file_name" />
            <result property="savedFileName" column="saved_file_name" />
        </collection>
        <!-- 1:N 관계 user_action -->
        <collection property="userActions" ofType="com.mezzala.dto.UserActionDto">
            <id property="actionId" column="action_id"/>
            <result property="actionCategory" column="action_category"/>
            <result property="userId" column="user_id"/>
            <result property="boardId" column="board_id"/>
        </collection>
    </resultMap>
    <resultMap id="CommentResultMap" type="com.mezzala.dto.CommentDto">
        <id property="commentId" column="comment_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="regDate" column="reg_date"/>
        <result property="content" column="content"/>
        <result property="recommendationCount" column="c1_recommendation_count"/>
        <result property="commentState" column="comment_state"/>
        <result property="userId" column="user_id"/>
        <result property="boardId" column="board_id"/>
        <association property="user" javaType="com.mezzala.dto.UserDto">
            <id property="userId" column="user_id" />
            <result property="nickname" column="nickname" />
            <result property="socialMethod" column="social_method" />
            <result property="joinDate" column="join_date" />
            <result property="roleId" column="role_id" />
            <result property="state" column="state" />
        </association>
        <collection property="commentActions" ofType="com.mezzala.dto.CommentActionDto">
            <id property="actionId" column="ca1_action_id"/>
            <result property="userId" column="ca1_user_id"/>
            <result property="commentId" column="ca1_comment_id"/>
        </collection>
        <collection property="recomments" ofType="com.mezzala.dto.CommentDto">
            <id property="commentId" column="recomment_comment_id"/>
            <result property="parentId" column="recomment_parent_id"/>
            <result property="regDate" column="recomment_reg_date"/>
            <result property="content" column="recomment_content"/>
            <result property="commentState" column="recomment_comment_state"/>
            <result property="userId" column="recomment_user_id"/>
            <result property="boardId" column="recomment_board_id"/>
            <association property="user" javaType="com.mezzala.dto.UserDto">
                <id property="userId" column="recomment_user_id"/>
                <result property="nickname" column="recomment_nickname"/>
                <result property="socialMethod" column="recomment_social_method"/>
                <result property="joinDate" column="recomment_join_date"/>
                <result property="roleId" column="recomment_role_id"/>
                <result property="state" column="recomment_state"/>
            </association>
            <collection property="commentActions" ofType="com.mezzala.dto.CommentActionDto">
                <id property="actionId" column="ca2_action_id"/>
                <result property="userId" column="ca2_user_id"/>
                <result property="commentId" column="ca2_comment_id"/>
            </collection>
        </collection>
    </resultMap>
    <resultMap id="CommentActionResultMap" type="com.mezzala.dto.CommentActionDto">
        <id property="actionId" column="ca_action_id"/>
        <result property="userId" column="ca_user_id"/>
        <result property="commentId" column="ca_comment_id"/>
        <association property="comment" javaType="com.mezzala.dto.CommentDto">
            <id property="commentId" column="c_comment_id"/>
            <result property="parentId" column="c_parent_id"/>
            <result property="regDate" column="c_reg_date"/>
            <result property="content" column="c_content"/>
            <result property="commentState" column="c_comment_state"/>
            <result property="userId" column="c_user_id"/>
            <result property="boardId" column="c_board_id"/>
        </association>
    </resultMap>


    <select id="selectAllCategory" resultMap="BoardLargeCategoryResultMap">
        SELECT
            large.large_category_id,
            large.large_category_name,
            small.small_category_index,
            small.large_category_id,
            small.small_category_name
        FROM
            board_large_category large
        LEFT JOIN
            board_small_category small
        ON
            large.large_category_id = small.large_category_id
        ORDER BY
            small.small_category_index
    </select>

    <insert id="insertBoard" parameterType="BoardDto" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO
            board (
                subject,
                content,
                user_id,
                large_category_id,
                small_category_index
            )
        VALUES (
                #{subject},
                #{content},
                #{userId},
                #{largeCategoryId},
                #{smallCategoryIndex}
            )
    </insert>

    <insert id="insertBoardAttach" parameterType="hashmap">
        INSERT INTO
            board_attach (
                user_file_name,
                saved_file_name,
                board_id
            )
        VALUES
            <foreach collection="imageFiles" item="file" separator=",">
            (
                #{file.userFileName},
                #{file.savedFileName},
                #{boardId}
            )
            </foreach>
    </insert>

    <delete id="deleteBoardAttachAll" parameterType="hashmap">
        DELETE FROM
            board_attach
        WHERE
            board_id = #{boardId}
    </delete>

    <update id="modifyBoard" parameterType="BoardDto">
        UPDATE
            board
        SET
            subject = #{subject},
            content = #{content},
            reg_date = #{regDate},
            large_category_id = #{largeCategoryId},
            small_category_index = #{smallCategoryIndex}
        WHERE
            board_id = #{boardId}
    </update>

    <select id="selectBoardWithPaging" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            COALESCE(COUNT(DISTINCT ua.action_id), 0) AS recommendationCount,
            COALESCE(COUNT(DISTINCT c.comment_id), 0) AS commentCount,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            MAX(ba.attach_id) AS attach_id,
            MAX(ba.user_file_name) AS user_file_name,
            MAX(ba.saved_file_name) AS saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            comment c
        ON
            b.board_id = c.board_id
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_state = true
        AND
            b.user_id NOT IN (
                SELECT
                    bu.block_user
                FROM
                    block_user bu
                WHERE
                    bu.user_id = #{userId}
            )
        AND
            b.large_category_id != 3
        GROUP BY
            b.board_id
        ORDER BY
            <choose>
                <when test="sortValue == 'bestList'">
                    b.visit_count + (COUNT(ua.board_id) * 2) DESC,
                    b.reg_date DESC
                </when>
                <when test="sortValue == 'latestList'">
                    b.reg_date DESC
                </when>
            </choose>
        LIMIT
            10
        OFFSET
            #{start}
    </select>

    <select id="selectBoardWithPagingAndSearch" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            COALESCE(COUNT(DISTINCT ua.action_id), 0) AS recommendationCount,
            COALESCE(COUNT(DISTINCT c.comment_id), 0) AS commentCount,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            MAX(ba.attach_id) AS attach_id,
            MAX(ba.user_file_name) AS user_file_name,
            MAX(ba.saved_file_name) AS saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            comment c
        ON
            b.board_id = c.board_id
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.subject LIKE CONCAT('%', #{searchValue}, '%')
        AND
            b.board_state = true
        AND
            b.user_id NOT IN (
                SELECT
                    bu.block_user
                FROM
                    block_user bu
                WHERE
                    bu.user_id = #{userId}
            )
        AND
            b.large_category_id != 3
        GROUP BY
            b.board_id
        ORDER BY
            <choose>
                <when test="sortValue == 'bestList'">
                    b.visit_count + (COUNT(ua.board_id) * 2) DESC,
                    b.reg_date DESC
                </when>
                <when test="sortValue == 'latestList'">
                    b.reg_date DESC
                </when>
            </choose>
        LIMIT
            10
        OFFSET
            #{start}
    </select>

    <select id="selectAllBoardCount" parameterType="hashmap" resultType="int">
        SELECT
            COUNT(*)
        FROM
            board b
        WHERE
            b.board_state = true
        AND
            b.user_id NOT IN (
                SELECT
                    bu.block_user
                FROM
                    block_user bu
                WHERE
                    bu.user_id = #{userId}
            )
        AND
            b.large_category_id != 3
        <choose>
            <when test="searchValue.length != null and searchValue != ''">
                AND
                b.subject LIKE CONCAT('%', #{searchValue}, '%')
            </when>
        </choose>
    </select>

    <select id="selectBoardWithBoardId" parameterType="int" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name,
            ua.action_id,
            ua.action_category,
            ua.user_id,
            ua.board_id
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_id = #{boardId}
    </select>

    <update id="updateVisitedBoard" parameterType="int">
        UPDATE
            board
        SET
            visit_count = visit_count + 1
        WHERE
            board_id = #{boardId}
    </update>

    <select id="selectBoardWithBoardNo" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name,
            ua.action_id,
            ua.action_category,
            ua.user_id,
            ua.board_id
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_id = (
                select
                    b2.board_id
                from
                    board b2
                LEFT JOIN
                    user_action ua2
                ON
                    b2.board_id = ua2.board_id
                AND
                    ua2.action_category = "like"
                WHERE
                    b2.board_state = true
                AND
                    b2.large_category_id != 3
                <choose>
                    <when test="userId.length != null and userId != ''">
                        AND
                            b2.user_id NOT IN (
                                SELECT
                                    bu.block_user
                                FROM
                                    block_user bu
                                WHERE
                                    bu.user_id = #{userId}
                            )
                    </when>
                </choose>
                <choose>
                    <when test="searchValue.length != null and searchValue != ''">
                        AND
                            b2.subject LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                </choose>
                GROUP BY
                    b2.board_id
                ORDER BY
                    <choose>
                        <when test="sortValue == 'bestList'">
                            b2.visit_count + (COUNT(ua2.board_id) * 2) DESC,
                            b2.reg_date DESC
                        </when>
                        <when test="sortValue == 'latestList'">
                            b2.reg_date DESC
                        </when>
                    </choose>
                LIMIT
                    1
                OFFSET
                    #{boardNo}
            )
    </select>

    <select id="selectMypageBoard" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name,
            ua.action_id,
            ua.action_category,
            ua.user_id,
            ua.board_id
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_id = (
                SELECT
                    b.board_id
                FROM
                    board b
                LEFT JOIN
                    user_action ua
                ON
                    b.board_id = ua.board_id
                AND
                    <choose>
                        <when test="tabNo == 5">
                            ua.action_category = "bookmark"
                        </when>
                        <otherwise>
                            ua.action_category = "like"
                        </otherwise>
                    </choose>
                LEFT JOIN
                    comment c
                ON
                    b.board_id = c.board_id
                LEFT JOIN
                    user u
                ON
                    b.user_id = u.user_id
                LEFT JOIN
                    board_attach ba
                ON
                    b.board_id = ba.board_id
                LEFT JOIN
                    board_large_category lc
                ON
                    b.large_category_id = lc.large_category_id
                LEFT JOIN
                    board_small_category sc
                ON
                    b.small_category_index = sc.small_category_index
                WHERE
                    b.board_state = true
                AND
                    <choose>
                        <when test="tabNo == 1">
                            b.user_id = #{userId}
                        </when>
                        <when test="tabNo == 3 || tabNo == 5">
                            ua.user_id = #{userId}
                        </when>
                    </choose>
                GROUP BY
                    b.board_id
                ORDER BY
                    b.reg_date DESC
                LIMIT
                    1
                OFFSET
                    #{boardNo}
            )
    </select>

    <select id="selectMypageCommentBoard" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name,
            ua.action_id,
            ua.action_category,
            ua.user_id,
            ua.board_id
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_id = (
                SELECT
                    b.board_id
                FROM
                    comment c
                LEFT JOIN
                    board b
                ON
                    c.board_id = b.board_id
                LEFT JOIN
                    board_large_category lc
                ON
                    b.large_category_id = lc.large_category_id
                LEFT JOIN
                    board_small_category sc
                ON
                    b.small_category_index = sc.small_category_index
                <choose>
                    <when test="tabNo == 4">
                    LEFT JOIN
                        comment_action ca
                    ON
                        c.comment_id = ca.comment_id
                    </when>
                </choose>
                WHERE
                    c.comment_state = true
                AND
                    <choose>
                        <when test="tabNo == 2">
                            c.user_id = #{userId}
                        </when>
                        <when test="tabNo == 4">
                            ca.user_id = #{userId}
                        </when>
                    </choose>
                ORDER BY
                    c.reg_date DESC
                LIMIT
                    1
                OFFSET
                    #{boardNo}
            )
    </select>

    <delete id="deleteContent" parameterType="int">
        DELETE FROM
            board
        WHERE
            board_id = #{boardId};
    </delete>

    <insert id="insertUserAction" parameterType="hashmap">
        INSERT INTO
            user_action (
                action_category,
                user_id,
                board_id
            )
        VALUES
            (
                #{actionCategory},
                #{userId},
                #{boardId}
            )
    </insert>

    <delete id="deleteUserAction" parameterType="hashmap">
        DELETE FROM
            user_action
        WHERE
            user_id = #{userId}
        AND
            board_id = #{boardId}
        AND
            action_category = #{actionCategory}
    </delete>

    <insert id="insertComment" parameterType="hashmap">
        INSERT INTO
            comment (
                content,
                user_id,
                board_id
            )
        VALUES (
                #{content},
                #{userId},
                #{boardId}
            )
    </insert>

    <insert id="insertRecomment" parameterType="hashmap">
        INSERT INTO
        comment (
            parent_id,
            content,
            user_id,
            board_id
        )
        VALUES (
            #{parentId},
            #{content},
            #{userId},
            #{boardId}
        )
    </insert>

    <select id="selectCommentsWithBoardId" parameterType="hashmap" resultMap="CommentResultMap">
        SELECT
            c1.comment_id,
            c1.parent_id,
            c1.reg_date,
            c1.content,
            c1.comment_state,
            c1.user_id,
            c1.board_id,

            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,

            ca1.action_id AS ca1_action_id,
            ca1.user_id AS ca1_user_id,
            ca1.comment_id AS ca1_comment_id,

            c2.comment_id AS recomment_comment_id,
            c2.parent_id AS recomment_parent_id,
            c2.reg_date AS recomment_reg_date,
            c2.content AS recomment_content,
            c2.comment_state AS recomment_comment_state,
            c2.user_id AS recomment_user_id,
            c2.board_id AS recomment_board_id,

            u2.user_id AS recomment_user_id,
            u2.nickname AS recomment_nickname,
            u2.social_method AS recomment_social_method,
            u2.join_date AS recomment_join_date,
            u2.role_id AS recomment_role_id,
            u2.state AS recomment_state,

            ca2.action_id AS ca2_action_id,
            ca2.user_id AS ca2_user_id,
            ca2.comment_id AS ca2_comment_id
        FROM
            comment c1
        LEFT JOIN
            comment_action ca1
        ON
            c1.comment_id = ca1.comment_id
        LEFT JOIN
            comment c2
        ON
            c1.comment_id = c2.parent_id
        LEFT JOIN
            comment_action ca2
        ON
            c2.comment_id = ca2.comment_id
        LEFT JOIN
            user u
        ON
            c1.user_id = u.user_id
        LEFT JOIN
            user u2
        ON
            c2.user_id = u2.user_id
<!--        WHERE-->
<!--            c1.board_id = ${boardId}-->
        WHERE
            c1.parent_id IS NULL
        AND
            c1.board_id = ${boardId}
        ORDER BY
            c1.comment_id ASC,
            c2.comment_id ASC
        LIMIT
            10
        OFFSET
            #{start}
    </select>

    <select id="selectCommentActions" parameterType="hashmap" resultMap="CommentActionResultMap">
        SELECT
            ca.action_id AS ca_action_id,
            ca.user_id AS ca_user_id,
            ca.comment_id AS ca_comment_id,

            c.comment_id AS c_comment_id,
            c.parent_id AS c_parent_id,
            c.reg_date AS c_reg_date,
            c.content AS c_content,
            c.comment_state c_comment_state,
            c.user_id AS c_user_id,
            c.board_id AS c_board_id
        FROM
            comment_action ca
        LEFT JOIN
            comment c
        ON
            c.comment_id = ca.comment_id
        WHERE
            ca.user_id = #{userId}
        AND
            c.board_id = #{boardId}
    </select>

    <update id="deleteCommentWithCommentIdAndBoardId" parameterType="hashmap">
        UPDATE
            comment
        SET
            comment_state = false
        WHERE
            comment_id = #{commentId}
        AND
            board_id = ${boardId}
    </update>

    <update id="updateCommentWithCommentIdAndBoardId" parameterType="hashmap">
        UPDATE
            comment
        SET
            content = #{content},
            reg_date = #{modifyDate}
        WHERE
            comment_id = #{commentId}
        AND
            board_id = #{boardId}
    </update>

    <insert id="insertCommentAction" parameterType="hashmap">
        INSERT INTO
            comment_action (
                user_id,
                comment_id
            )
        VALUES (
                #{userId},
                #{commentId}
            )
    </insert>

    <delete id="deleteCommentRecommendation" parameterType="hashmap">
        DELETE FROM
            comment_action
        WHERE
            user_id = #{userId}
        AND
            comment_id = #{commentId}
    </delete>

    <select id="selectHubBoard" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name,
            ua.action_id,
            ua.action_category,
            ua.user_id,
            ua.board_id
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_id = (
                SELECT
                    b2.board_id
                FROM
                    board b2
                LEFT JOIN
                    user_action ua2
                ON
                    b2.board_id = ua2.board_id
                AND
                    ua2.action_category = "like"
                WHERE
                    b2.board_state = true
                <choose>
                    <when test="searchValue.length != null and searchValue != ''">
                        AND
                            b2.subject LIKE CONCAT('%', #{searchValue}, '%')
                    </when>
                </choose>
                AND
                    b2.user_id NOT IN (
                        SELECT
                            bu.block_user
                        FROM
                            block_user bu
                        WHERE
                            bu.user_id = #{userId}
                    )
                AND
                    b2.large_category_id = #{largeCategory}
                <choose>
                    <when test="category != 'all'">
                        AND
                        b2.small_category_index = #{category}
                    </when>
                </choose>
                GROUP BY
                    b2.board_id
                ORDER BY
                    <choose>
                        <when test="sortValue == 'best'">
                            b2.visit_count + (COUNT(ua2.board_id) * 2) DESC,
                            b2.reg_date DESC
                        </when>
                        <when test="sortValue == 'latest'">
                            b2.reg_date DESC
                        </when>
                    </choose>
                LIMIT
                    1
                OFFSET
                    #{boardNo}
            )
    </select>

    <select id="selectAllCommentCount" parameterType="int" resultType="int">
        SELECT
            COUNT(*)
        FROM
            comment
        WHERE
            board_id = ${boardId}
        AND
            parent_id IS NULL
    </select>

    <select id="selectAllNoticeBoardCount" resultType="int">
        SELECT
            COUNT(*)
        FROM
            board
        WHERE
            large_category_id = 3
        AND
            board_state = true
    </select>

    <select id="selectNoticeBoardWithPaging" parameterType="int" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            COALESCE(COUNT(DISTINCT ua.action_id), 0) AS recommendationCount,
            COALESCE(COUNT(DISTINCT c.comment_id), 0) AS commentCount,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            MAX(ba.attach_id) AS attach_id,
            MAX(ba.user_file_name) AS user_file_name,
            MAX(ba.saved_file_name) AS saved_file_name,
            lc.large_category_id,
            lc.large_category_name
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            comment c
        ON
            b.board_id = c.board_id
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        WHERE
            b.board_state = true
        AND
            b.large_category_id = 3
        GROUP BY
            b.board_id
        ORDER BY
            b.reg_date DESC
        LIMIT
            5
        OFFSET
            #{start}
    </select>

    <select id="selectNoticeBoard" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            lc.large_category_id,
            lc.large_category_name,
            ua.action_id,
            ua.action_category,
            ua.user_id,
            ua.board_id
        FROM
            board b
        LEFT JOIN
            user_action ua
        ON
            b.board_id = ua.board_id
        AND
            ua.action_category = "like"
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        WHERE
            b.board_id = (
                SELECT
                    b2.board_id
                FROM
                    board b2
                LEFT JOIN
                    user_action ua2
                ON
                    b2.board_id = ua2.board_id
                AND
                    ua2.action_category = "like"
                WHERE
                    b2.large_category_id = 3
                <choose>
                    <when test="fromPage == 'home'">
                        AND
                            b2.board_state = true
                    </when>
                </choose>
<!--                <choose>-->
<!--                    <when test="searchValue.length != null and searchValue != ''">-->
<!--                        AND-->
<!--                            b2.subject LIKE CONCAT('%', #{searchValue}, '%')-->
<!--                    </when>-->
<!--                </choose>-->
                GROUP BY
                    b2.board_id
                ORDER BY
                    <choose>
                        <when test="fromPage">
                            b2.reg_date DESC
                        </when>
                        <when test="sortValue == 'best'">
                            b2.visit_count + (COUNT(ua2.board_id) * 2) DESC,
                            b2.reg_date DESC
                        </when>
                        <when test="sortValue == 'latest'">
                            b2.reg_date DESC
                        </when>
                    </choose>
                LIMIT
                    1
                OFFSET
                    #{boardNo}
            )
    </select>

    <select id="selectYoutube" resultType="YoutubeDto">
        SELECT
            youtube_id AS youtubeId,
            latest_id AS latestId,
            best_id AS bestId
        FROM
            youtube
    </select>

</mapper>