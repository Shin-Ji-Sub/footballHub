<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mezzala.mapper.BoardMapper">
    <resultMap id="BoardLargeCategoryResultMap" type="com.mezzala.dto.BoardLargeCategoryDto">
        <id property="largeCategoryId" column="large_category_id" />
        <result property="largeCategoryName" column="large_category_name" />
        <collection property="smallCategories" ofType="com.mezzala.dto.BoardSmallCategoryDto">
            <id property="smallCategoryIndex" column="small_category_index" />
            <result property="largeCategoryId" column="large_category_id" />
            <result property="smallCategoryName" column="small_category_name"/>
        </collection>
    </resultMap>
    <!-- <id> → <result> → <association> → <collection> 순서를 지켜야함!-->
    <resultMap id="BoardResultMap" type="com.mezzala.dto.BoardDto">
        <id property="boardId" column="board_id" />
        <result property="subject" column="subject" />
        <result property="content" column="content" />
        <result property="regDate" column="reg_date" />
        <result property="visitCount" column="visit_count" />
        <result property="recommendationCount" column="recommendation_count" />
        <result property="boardState" column="board_state" />
        <!-- 1:1 관계 user -->
        <association property="user" javaType="com.mezzala.dto.UserDto">
            <id property="userId" column="user_id" />
            <result property="nickname" column="nickname" />
            <result property="socialMethod" column="social_method" />
            <result property="joinDate" column="join_date" />
            <result property="isAdmin" column="is_admin" />
            <result property="state" column="state" />
        </association>
        <!-- 1:1 관계 board_large_category -->
        <association property="largeCategory" javaType="com.mezzala.dto.BoardLargeCategoryDto">
            <id property="largeCategoryId" column="large_category_id" />
            <result property="largeCategoryName" column="large_category_name" />
        </association>
        <!-- 1:1 관계 board_small_category -->
        <association property="smallCategory" javaType="com.mezzala.dto.BoardSmallCategoryDto">
            <id property="smallCategoryIndex" column="small_category_index" />
            <result property="smallCategoryName" column="small_category_name" />
        </association>
        <!-- 1:N 관계 board_attach -->
        <collection property="boardAttaches" ofType="com.mezzala.dto.BoardAttachDto">
            <id property="attachId" column="attach_id" />
            <result property="userFileName" column="user_file_name" />
            <result property="savedFileName" column="saved_file_name" />
            <result property="downloadCount" column="download_count" />
        </collection>
    </resultMap>

    <select id="selectAllCategory" resultMap="BoardLargeCategoryResultMap">
        SELECT
            large.large_category_id,
            large.large_category_name,
            small.small_category_index,
            small.large_category_id,
            small.small_category_name
        FROM
            board_large_category large
        LEFT JOIN
            board_small_category small
        ON
            large.large_category_id = small.large_category_id
        ORDER BY
            small.small_category_index;
    </select>

    <insert id="insertBoard" parameterType="BoardDto" useGeneratedKeys="true" keyProperty="boardId">
        INSERT INTO
            board (
                subject,
                content,
                user_id,
                large_category_id,
                small_category_index
            )
        VALUES (
                #{subject},
                #{content},
                #{userId},
                #{largeCategoryId},
                #{smallCategoryIndex}
            )
    </insert>

    <insert id="insertBoardAttach">
        INSERT INTO
            board_attach (
                user_file_name,
                saved_file_name,
                board_id
            )
        VALUES
            <foreach collection="imageFiles" item="file" separator=",">
            (
                #{file.userFileName},
                #{file.savedFileName},
                #{boardId}
            )
            </foreach>
    </insert>

    <select id="selectBoardWithPaging" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.recommendation_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.is_admin,
            u.state,
            MAX(ba.attach_id) AS attach_id,
            MAX(ba.user_file_name) AS user_file_name,
            MAX(ba.saved_file_name) AS saved_file_name,
            MAX(ba.download_count) AS download_count,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name
        FROM
            board b
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_state = true
        GROUP BY
            b.board_id
        ORDER BY
            <choose>
                <when test="category == 'bestList'">
                    b.visit_count + (b.recommendation_count * 2) DESC,
                    b.reg_date DESC
                </when>
                <when test="category == 'latestList'">
                    b.reg_date DESC
                </when>
            </choose>
        LIMIT
            10
        OFFSET
            #{start}
    </select>

    <select id="selectBoardWithPagingAndSearch" parameterType="hashmap" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.recommendation_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.is_admin,
            u.state,
            MAX(ba.attach_id) AS attach_id,
            MAX(ba.user_file_name) AS user_file_name,
            MAX(ba.saved_file_name) AS saved_file_name,
            MAX(ba.download_count) AS download_count,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name
        FROM
            board b
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.subject LIKE CONCAT('%', #{searchValue}, '%')
        AND
            b.board_state = true
        GROUP BY
            b.board_id
        ORDER BY
            b.visit_count + (b.recommendation_count * 2) DESC,
            b.reg_date DESC
        LIMIT
            10
        OFFSET
            #{start}
    </select>

    <select id="selectAllBoardCount" resultType="int">
        SELECT
            COUNT(*)
        FROM
            board
        WHERE
            board_state = true
    </select>

    <select id="selectBoardWithBoardId" parameterType="int" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.recommendation_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.is_admin,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            ba.download_count,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name
        FROM
            board b
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_id = #{boardId}
    </select>

    <update id="updateVisitedBoard" parameterType="int">
        UPDATE
            board
        SET
            visit_count = visit_count + 1
        WHERE
            board_id = #{boardId}
    </update>

    <select id="selectBoardWithBoardNo" parameterType="int" resultMap="BoardResultMap">
        SELECT
            b.board_id,
            b.subject,
            b.content,
            b.reg_date,
            b.visit_count,
            b.recommendation_count,
            b.board_state,
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.is_admin,
            u.state,
            ba.attach_id,
            ba.user_file_name,
            ba.saved_file_name,
            ba.download_count,
            lc.large_category_id,
            lc.large_category_name,
            sc.small_category_index,
            sc.small_category_name
        FROM
            board b
        LEFT JOIN
            user u
        ON
            b.user_id = u.user_id
        LEFT JOIN
            board_attach ba
        ON
            b.board_id = ba.board_id
        LEFT JOIN
            board_large_category lc
        ON
            b.large_category_id = lc.large_category_id
        LEFT JOIN
            board_small_category sc
        ON
            b.small_category_index = sc.small_category_index
        WHERE
            b.board_id = (
                select
                    board_id
                from
                    board
                WHERE
                    board_state = true
                GROUP BY
                    board_id
                ORDER BY
                    visit_count + (recommendation_count * 2) DESC,
                    reg_date DESC
                LIMIT
                    1
                OFFSET
                    #{boardNo}
            );
    </select>

    <insert id="insertUserAction" parameterType="hashmap">
        INSERT INTO
            user_action (
                action_category,
                user_id,
                board_id
            )
        VALUES
            (
                #{actionCategory},
                #{userId},
                #{boardId}
            )
    </insert>

</mapper>