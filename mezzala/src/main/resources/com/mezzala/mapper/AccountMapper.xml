<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mezzala.mapper.AccountMapper">
    <resultMap id="UserResultMap" type="com.mezzala.dto.UserDto">
        <id property="userId" column="user_id"/>
        <result property="nickname" column="nickname"/>
        <result property="socialMethod" column="social_method"/>
        <result property="joinDate" column="join_date"/>
        <result property="roleId" column="role_id"/>
        <result property="state" column="state"/>
        <result property="accessToken" column="access_token"/>
        <!-- 1:1 관계 user_role -->
        <association property="userRole" javaType="com.mezzala.dto.UserRoleDto">
            <id property="roleId" column="ur_role_id"/>
            <result property="roleName" column="ur_role_name"/>
            <result property="roleKorName" column="ur_role_kor_name"/>
        </association>
        <!-- 1:N 관계 user_action -->
        <collection property="likeUserActions" ofType="com.mezzala.dto.UserActionDto">
            <id property="actionId" column="like_action_id"/>
            <result property="actionCategory" column="like_action_category"/>
            <result property="userId" column="like_user_id"/>
            <result property="boardId" column="like_board_id"/>
        </collection>
        <collection property="bookmarkUserActions" ofType="com.mezzala.dto.UserActionDto">
            <id property="actionId" column="bookmark_action_id"/>
            <result property="actionCategory" column="bookmark_action_category"/>
            <result property="userId" column="bookmark_user_id"/>
            <result property="boardId" column="bookmark_board_id"/>
        </collection>
    </resultMap>

    <select id="selectUser" parameterType="String" resultMap="UserResultMap">

        SELECT
            u.user_id,
            u.nickname,
            u.social_method,
            u.join_date,
            u.role_id,
            u.state,
            u.access_token,

            ur.role_id AS ur_role_id,
            ur.role_name AS ur_role_name,
            ur.role_kor_name AS ur_role_kor_name,

            ua_like.action_id AS like_action_id,
            ua_like.action_category AS like_action_category,
            ua_like.user_id AS like_user_id,
            ua_like.board_id AS like_board_id,

            ua_bookmark.action_id AS bookmark_action_id,
            ua_bookmark.action_category AS bookmark_action_category,
            ua_bookmark.user_id AS bookmark_user_id,
            ua_bookmark.board_id AS bookmark_board_id
        FROM
            user u
        LEFT JOIN
            user_role ur
        ON
            u.role_id = ur.role_id
        LEFT JOIN
            user_action ua_like
        ON
            u.user_id = ua_like.user_id
        AND
            ua_like.action_category = 'like'
        LEFT JOIN
            user_action ua_bookmark
        ON
            u.user_id = ua_bookmark.user_id
        AND
            ua_bookmark.action_category = 'bookmark'
        WHERE
            u.user_id = #{userId}
        AND
            u.state = true;
    </select>

    <insert id="insertAccount" parameterType="hashMap">
        INSERT INTO
            user (
                user_id,
                nickname,
                social_method
            )
        VALUES (
                #{userId},
                #{nickname},
                #{socialMethod}
            );
    </insert>

    <insert id="insertBlockUSer" parameterType="hashmap">
        INSERT INTO
            block_user (
                block_user,
                user_id
            )
        VALUES (
                #{blockUser},
                #{userId}
            )
    </insert>

    <delete id="deleteBlockUser" parameterType="hashmap">
        DELETE FROM
            block_user
        WHERE
            block_user = #{blockUserId}
        AND
            user_id = #{userId}
    </delete>

    <insert id="insertReport" parameterType="hashmap">
        INSERT INTO
            report (
                reported_content_id,
                report_category,
                user_id
            )
        VALUES (
                #{contentId},
                #{reportCategory},
                #{userId}
            )
    </insert>

    <update id="updateUserState" parameterType="String">
        UPDATE
            user
        SET
            state = false
        WHERE
            user_id = #{userId}
    </update>

</mapper>